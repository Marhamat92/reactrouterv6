{"ast":null,"code":"var _jsxFileName = \"/home/marhamat/Desktop/reactrouterv6/src/components/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const location = useLocation(); //we use this to get the location of the page when we redirect to login page\n\n  console.log(location, \"location from private route\");\n\n  //check if user is logged in or not\n  //if not logged in then redirect to login page\n  //if logged in then show the component or show children\n\n  const {\n    user\n  } = useAuth();\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/auth/login\",\n      replace: true,\n      state: {\n        return_url: location.pathname || location.search\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n}\n_s(PrivateRoute, \"61MB+C3dYYve9OEVsFYuYeM/IOk=\", false, function () {\n  return [useLocation, useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useAuth","Navigate","useLocation","PrivateRoute","children","location","console","log","user","return_url","pathname","search"],"sources":["/home/marhamat/Desktop/reactrouterv6/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react'\nimport { useAuth } from '../context/AuthContext'\nimport { Navigate, useLocation } from 'react-router-dom';\n\nfunction PrivateRoute({ children }) {\n\n  const location = useLocation(); //we use this to get the location of the page when we redirect to login page\n\n  console.log(location, \"location from private route\")\n\n\n  //check if user is logged in or not\n  //if not logged in then redirect to login page\n  //if logged in then show the component or show children\n\n  const { user } = useAuth();\n\n  if (!user) {\n    return <Navigate to=\"/auth/login\" replace state={\n      { return_url: location.pathname || location.search }\n    } />\n  }\n\n\n\n\n  return children\n}\n\nexport default PrivateRoute"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC;AAEzD,SAASC,YAAY,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAEhC,MAAMC,QAAQ,GAAGH,WAAW,EAAE,CAAC,CAAC;;EAEhCI,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAE,6BAA6B,CAAC;;EAGpD;EACA;EACA;;EAEA,MAAM;IAAEG;EAAK,CAAC,GAAGR,OAAO,EAAE;EAE1B,IAAI,CAACQ,IAAI,EAAE;IACT,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC,aAAa;MAAC,OAAO;MAAC,KAAK,EAC7C;QAAEC,UAAU,EAAEJ,QAAQ,CAACK,QAAQ,IAAIL,QAAQ,CAACM;MAAO;IACpD;MAAA;MAAA;MAAA;IAAA,QAAG;EACN;EAKA,OAAOP,QAAQ;AACjB;AAAC,GAvBQD,YAAY;EAAA,QAEFD,WAAW,EASXF,OAAO;AAAA;AAAA,KAXjBG,YAAY;AAyBrB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}